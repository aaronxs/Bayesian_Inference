# Bayesian approach to binary data via simulation
# prior density
f_obj <- function(x){
  (qbeta(0.025, shape1=x, shape2=x) - 0.4)^2
}
n <- 20
optimal <- matrix(1:40, ncol=20)
min_theta <- 10000
for(i in 1:n){
  optimal[1,i] <- nlm(f_obj, p = i/20)$minimum
  optimal[2,i] <- nlm(f_obj, p = i/20)$estimate
  if(optimal[1,i] < min_theta){min_theta <- optimal[2,i]}
}

alpha1 = 0.5
beta1 = 0.5
alpha2 = min_theta
beta2 = min_theta

# calculations
n <- 150
x1 <- 85
x2 <- 70
x3 <- 60

# For Prior one
alpha_new11 <- alpha1 + x1
beta_new11 <- beta1 + n - x1
alpha_new12 <- alpha1 + x2
beta_new12 <- beta1 + n - x2
alpha_new13 <- alpha1 + x3
beta_new13 <- beta1 + n - x3

cr11 <- c(alpha_new11/(alpha_new11+beta_new11), alpha_new11*beta_new11/((alpha_new11+beta_new11)^2*(alpha_new11+beta_new11+1)) ,qbeta(0.025, shape1=alpha_new11, shape2=beta_new11), qbeta(0.0975, shape1=alpha_new11, shape2=beta_new11))
cr12 <- c(alpha_new12/(alpha_new12+beta_new12), alpha_new12*beta_new12/((alpha_new12+beta_new12)^2*(alpha_new12+beta_new12+1)) ,qbeta(0.025, shape1=alpha_new12, shape2=beta_new12), qbeta(0.0975, shape1=alpha_new12, shape2=beta_new12))
cr13 <- c(alpha_new13/(alpha_new13+beta_new13), alpha_new13*beta_new13/((alpha_new13+beta_new13)^2*(alpha_new13+beta_new13+1)) ,qbeta(0.025, shape1=alpha_new12, shape2=beta_new13), qbeta(0.0975, shape1=alpha_new13, shape2=beta_new13))
summary_1 <- round(rbind(cr11, cr12, cr13),4)
colnames(summary_1) <- c("mean", "sd", "2.5%", "97.5%")
rownames(summary_1) <- c("District 1", "District 2", "District 3")

# For Prior Two
alpha_new21 <- alpha2 + x1
beta_new21 <- beta2 + n - x1
alpha_new22 <- alpha2 + x2
beta_new22 <- beta2 + n - x2
alpha_new23 <- alpha2 + x3
beta_new23 <- beta2 + n - x3

cr21 <- c(alpha_new21/(alpha_new21+beta_new21), alpha_new11*beta_new21/((alpha_new21+beta_new21)^2*(alpha_new21+beta_new21+1)) ,qbeta(0.025, shape1=alpha_new21, shape2=beta_new21), qbeta(0.0975, shape1=alpha_new21, shape2=beta_new21))
cr22 <- c(alpha_new22/(alpha_new22+beta_new22), alpha_new12*beta_new22/((alpha_new22+beta_new22)^2*(alpha_new22+beta_new22+1)) ,qbeta(0.025, shape1=alpha_new22, shape2=beta_new22), qbeta(0.0975, shape1=alpha_new22, shape2=beta_new22))
cr23 <- c(alpha_new23/(alpha_new23+beta_new23), alpha_new13*beta_new23/((alpha_new23+beta_new23)^2*(alpha_new23+beta_new23+1)) ,qbeta(0.025, shape1=alpha_new22, shape2=beta_new23), qbeta(0.0975, shape1=alpha_new23, shape2=beta_new23))
summary_2 <- round(rbind(cr21, cr22, cr23),4)
colnames(summary_2) <- c("mean", "sd", "2.5%", "97.5%")
rownames(summary_2) <- c("District 1", "District 2", "District 3")

# simulations
ElectionNumber <- 10000
vote_pop <- 5001

# Prior one
overall_result1 <- numeric(ElectionNumber)
district_result1 <- matrix(1:30000, ncol=10000)
for(i in 1:ElectionNumber){
  p1 <- rbeta(1, shape1=alpha_new11, shape2=beta_new11)
  p2 <- rbeta(1, shape1=alpha_new12, shape2=beta_new12)
  p3 <- rbeta(1, shape1=alpha_new13, shape2=beta_new13)
  district_result1[1,i] <- rbinom(1, size=vote_pop, prob=p1)
  district_result1[2,i] <- rbinom(1, size=vote_pop, prob=p2)
  district_result1[3,i] <- rbinom(1, size=vote_pop, prob=p3)
  if(district_result1[1,i]>2500 && district_result1[2,i]>2500){overall_result1[i]=1}
  else if(district_result1[1,i]>2500 && district_result1[3,i]>2500){overall_result1[i]=1}
  else if(district_result1[2,i]>2500 && district_result1[3,i]>2500){overall_result1[i]=1}
  else overall_result1[i]=0
}  
prob_district1 <- c(sum(district_result1[1,]>2500),sum(district_result1[2,]>2500),sum(district_result1[3,]>2500))/ElectionNumber
prob_overall1 <- sum(overall_result1)/ElectionNumber

# Prior one
overall_result2 <- numeric(ElectionNumber)
district_result2 <- matrix(1:30000, ncol=10000)
for(i in 1:ElectionNumber){
  p1 <- rbeta(1, shape1=alpha_new21, shape2=beta_new21)
  p2 <- rbeta(1, shape1=alpha_new22, shape2=beta_new22)
  p3 <- rbeta(1, shape1=alpha_new23, shape2=beta_new23)
  district_result2[1,i] <- rbinom(1, size=vote_pop, prob=p1)
  district_result2[2,i] <- rbinom(1, size=vote_pop, prob=p2)
  district_result2[3,i] <- rbinom(1, size=vote_pop, prob=p3)
  if(district_result2[1,i]>2500 && district_result2[2,i]>2500){overall_result2[i]=1}
  else if(district_result2[1,i]>2500 && district_result2[3,i]>2500){overall_result2[i]=1}
  else if(district_result2[2,i]>2500 && district_result2[3,i]>2500){overall_result2[i]=1}
  else overall_result2[i]=0
}  
prob_district2 <- c(sum(district_result2[1,]>2500),sum(district_result2[2,]>2500),sum(district_result2[3,]>2500))/ElectionNumber
prob_overall2 <- sum(overall_result2)/ElectionNumber

# summary
summary_3c <- rbind(c(prob_district1, prob_overall1), c(prob_district2, prob_overall2))
colnames(summary_3c) <- c("P(Win District 1)", "P(Win District 2)", "P(Win District 3)", "P(Majority)")
rownames(summary_3c) <- c("Prior One", "Prior Two")
